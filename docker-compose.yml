version: '3.8'

services:
  marbefes-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VERSION: ${VERSION:-latest}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
    container_name: marbefes-bbt-database
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs:rw
      - ./static:/app/static:ro
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - LOG_LEVEL=INFO
    env_file:
      - .env.production
    networks:
      - marbefes-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/layers"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.marbefes.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.marbefes.entrypoints=websecure"
      - "traefik.http.routers.marbefes.tls.certresolver=letsencrypt"

  nginx:
    image: nginx:alpine
    container_name: marbefes-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/var/www/html/static:ro
      - ./logs:/var/log/nginx:rw
      # Uncomment for SSL certificates
      # - ./certs:/etc/nginx/certs:ro
    networks:
      - marbefes-network
    depends_on:
      - marbefes-app

  redis:
    image: redis:7-alpine
    container_name: marbefes-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - marbefes-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: marbefes-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - marbefes-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: marbefes-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=change-this-password
    networks:
      - marbefes-network
    profiles:
      - monitoring

networks:
  marbefes-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local